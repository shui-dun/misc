" 显示行号
set number
" 显示命令
set showcmd
" 输入命令时按下tab键自动补全
set wildmenu
" 搜索时忽略大小写
set ignorecase
" 如果搜索中有一个或以上的大写字母，则不忽略大小写
set smartcase
" 搜索时高亮显示匹配的文本
set hlsearch
" 按F12切换粘贴模式
set pastetoggle=<F12>
" 每行的缩进值和上一行相等
set autoindent
" tab显示出来是多少个空格的长度
set tabstop=4
" 缩进用空格来表示
set expandtab
" 按tab时缩进的长度
set shiftwidth=4
" 按照文件中其他地方的缩进空格个数来确定一个tab是多少个空格
set smarttab
" 按退格键的时候退回缩进的长度
set softtabstop=4
" 在行首输入tab自动转换为4个空格，否则直接输出一个tab
" 其实我发现使用这个配置后，expandtab等配置就不需要了
function! SmartTab()
    let line = getline('.')
    if line =~ '^[ \t]*$'
        return "\<Space>\<Space>\<Space>\<Space>"
    else
        return "\<C-v>\<Tab>"
    endif
endfunction
inoremap <expr> <Tab> SmartTab()
" 可视化 tab
set list
set listchars=tab:>-
" 设置补全(ctrl+p)时应该查找哪些类型的候选项，以及如何排序
set cpt=.,k,w,b
" vim的自带目录工具netrw默认使用树视图
let g:netrw_liststyle=3
" 隐藏netrw的帮助信息
let g:netrw_banner=0
" 设置netrw的浏览方式为水平分割
let g:netrw_browse_split=2
" 设置netrw的分割窗口的宽度（例如通过:Vexplore打开）
let g:netrw_winsize=50
" 为vim逆天的删除命令"_d和"_x提供快捷键，分别设置为大写D和大写X
nnoremap D "_d
nnoremap X "_x
" 在可视模式下同样为"_d和"_x提供快捷键
vnoremap D "_d
vnoremap X "_x
" 为"+y（复制到系统剪贴板）提供快捷键，设置为大写Y
nnoremap Y "+y
vnoremap Y "+y

" 插件管理
call plug#begin()
" copilot补全
Plug 'github/copilot.vim'
" 常见语言的词典
Plug 'skywind3000/vim-dict'
" 美化状态栏
" Plug 'itchyny/lightline.vim'
" 模糊查找
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
" 目录树
Plug 'lambdalisue/fern.vim'
" 使用fern作为默认文件浏览器
Plug 'lambdalisue/fern-hijack.vim'
" vim初始页
Plug 'mhinz/vim-startify'
call plug#end()

" copilot补全所有文件类型
let g:copilot_filetypes = {
\ '*': v:true,
\ }

" lightline配置
" set laststatus=2
" set noshowmode

" fern配置
" 设置自定义命令Exp来打开fern
command! Exp :Fern %:h -drawer
" 显示隐藏文件
let g:fern#default_hidden=1

" windows下的配置
" 增大gui下的字体
" set guifont=Consolas:h14
" 修复不能退格的bug
" set backspace=indent,eol,start
